openapi: 3.0.0
info:
  title: Cat
  version: '1.0'
tags:
  - name: Cat
paths:
  /api/{version}/cats:
    post:
      operationId: CatController_create
      description: create cat
      parameters:
        - $ref: '#/components/parameters/api.Utils.Versioning.VersionParams'
      responses:
        '200':
          description: cat created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOutput'
        '400':
          description: When input is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateValidationError'
      tags:
        - Cat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInput'
      security:
        - BearerAuth: []
    get:
      operationId: CatController_list
      description: list cat
      parameters:
        - $ref: '#/components/parameters/api.Utils.Versioning.VersionParams'
        - $ref: '#/components/parameters/api.Utils.Model.ApiPaginationInput.page'
        - $ref: '#/components/parameters/api.Utils.Model.ApiPaginationInput.limit'
        - $ref: '#/components/parameters/api.Utils.Model.ApiPaginationInput.sort'
        - $ref: '#/components/parameters/api.Utils.Model.ApiPaginationInput.search'
      responses:
        '200':
          description: list cat successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOutput'
      tags:
        - Cat
      security:
        - BearerAuth: []
  /api/{version}/cats/{id}:
    put:
      operationId: CatController_update
      description: create update
      parameters:
        - $ref: '#/components/parameters/api.Utils.Versioning.VersionParams'
        - $ref: '#/components/parameters/UpdateParamInput'
      responses:
        '200':
          description: cat updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOutput'
        '400':
          description: When input is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateValidationError'
        '404':
          description: When cat not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCatNotFoundError'
      tags:
        - Cat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInput'
      security:
        - BearerAuth: []
    get:
      operationId: CatController_getById
      description: get cat by id
      parameters:
        - $ref: '#/components/parameters/api.Utils.Versioning.VersionParams'
        - $ref: '#/components/parameters/GetByIdParamInput'
      responses:
        '200':
          description: get cat by id successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetByIdOutput'
        '400':
          description: When input is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetByIdValidationError'
        '404':
          description: When cat not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetByIdCatNotFoundError'
      tags:
        - Cat
      security:
        - BearerAuth: []
    delete:
      operationId: CatController_delete
      description: delete cat
      parameters:
        - $ref: '#/components/parameters/api.Utils.Versioning.VersionParams'
        - $ref: '#/components/parameters/DeleteParamInput'
      responses:
        '200':
          description: cat deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOutput'
        '400':
          description: When input is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteValidationError'
        '404':
          description: When cat not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCatNotFoundError'
      tags:
        - Cat
      security:
        - BearerAuth: []
components:
  parameters:
    DeleteParamInput:
      name: id
      in: path
      required: true
      description: cat id
      schema:
        type: string
    GetByIdParamInput:
      name: id
      in: path
      required: true
      description: cat id
      schema:
        type: string
    UpdateParamInput:
      name: id
      in: path
      required: true
      description: cat id
      schema:
        type: string
    api.Utils.Model.ApiPaginationInput.limit:
      name: limit
      in: query
      required: true
      description: pagination limit per page
      schema:
        type: integer
        format: int32
        default: 10
      explode: false
    api.Utils.Model.ApiPaginationInput.page:
      name: page
      in: query
      required: true
      description: pagination current page
      schema:
        type: integer
        format: int32
        default: 1
      explode: false
    api.Utils.Model.ApiPaginationInput.search:
      name: search
      in: query
      required: false
      description: search by property **property1:value1|value2**
      schema:
        type: string
      explode: false
    api.Utils.Model.ApiPaginationInput.sort:
      name: sort
      in: query
      required: false
      description: sort by property **property1:desc,property2:asc**
      schema:
        type: string
        default: createdAt:desc
      explode: false
    api.Utils.Versioning.VersionParams:
      name: version
      in: path
      required: true
      description: route version
      schema:
        $ref: '#/components/schemas/api.Utils.Versioning.ApiVersion'
  schemas:
    CatEntity:
      type: object
      required:
        - name
        - breed
        - age
        - createdAt
        - updatedAt
        - deletedAt
      properties:
        name:
          type: string
        breed:
          type: string
        age:
          type: integer
          format: int16
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
          nullable: true
          default: null
      description: cat base entity
    CreateInput:
      type: object
      allOf:
        - type: object
          required:
            - name
            - breed
            - age
          properties:
            name:
              type: string
            breed:
              type: string
            age:
              type: integer
              format: int16
          description: The template for picking properties.
      description: cat create input
    CreateOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/CatEntity'
      description: cat create output
    CreateValidationError:
      type: object
      allOf:
        - type: object
          required:
            - error
          properties:
            error:
              type: object
              required:
                - code
                - traceid
                - context
                - message
                - timestamp
                - path
              properties:
                code:
                  type: number
                  enum:
                    - 400
                  description: status code
                traceid:
                  type: string
                  description: request traceid
                context:
                  type: string
                  description: class that error occur
                message:
                  type: array
                  items:
                    type: string
                    enum:
                      - 'name: Required, breed: Required, age: Required'
                  description: error message
                timestamp:
                  type: string
                  description: timestamp that error occur
                path:
                  type: string
                  description: path error
              description: default error model
          description: When input is invalid.
      description: When input is invalid
    DeleteCatNotFoundError:
      type: object
      allOf:
        - type: object
          required:
            - error
          properties:
            error:
              type: object
              required:
                - code
                - traceid
                - context
                - message
                - timestamp
                - path
              properties:
                code:
                  type: number
                  enum:
                    - 404
                  description: status code
                traceid:
                  type: string
                  description: request traceid
                context:
                  type: string
                  description: class that error occur
                message:
                  type: array
                  items:
                    type: string
                    enum:
                      - catNotFound
                  description: error message
                timestamp:
                  type: string
                  description: timestamp that error occur
                path:
                  type: string
                  description: path error
              description: default error model
          description: When resource not found.
      description: When cat not found
    DeleteOutput:
      type: object
      required:
        - deletedAt
      properties:
        deletedAt:
          type: string
          format: date-time
      allOf:
        - type: object
          required:
            - name
            - breed
            - age
            - createdAt
            - updatedAt
          properties:
            name:
              type: string
            breed:
              type: string
            age:
              type: integer
              format: int16
            createdAt:
              type: string
            updatedAt:
              type: string
          description: The template for omitting properties.
      description: cat delete output
    DeleteValidationError:
      type: object
      allOf:
        - type: object
          required:
            - error
          properties:
            error:
              type: object
              required:
                - code
                - traceid
                - context
                - message
                - timestamp
                - path
              properties:
                code:
                  type: number
                  enum:
                    - 400
                  description: status code
                traceid:
                  type: string
                  description: request traceid
                context:
                  type: string
                  description: class that error occur
                message:
                  type: array
                  items:
                    type: string
                    enum:
                      - 'id: Required'
                  description: error message
                timestamp:
                  type: string
                  description: timestamp that error occur
                path:
                  type: string
                  description: path error
              description: default error model
          description: When input is invalid.
      description: When input is invalid
    GetByIdCatNotFoundError:
      type: object
      allOf:
        - type: object
          required:
            - error
          properties:
            error:
              type: object
              required:
                - code
                - traceid
                - context
                - message
                - timestamp
                - path
              properties:
                code:
                  type: number
                  enum:
                    - 404
                  description: status code
                traceid:
                  type: string
                  description: request traceid
                context:
                  type: string
                  description: class that error occur
                message:
                  type: array
                  items:
                    type: string
                    enum:
                      - catNotFound
                  description: error message
                timestamp:
                  type: string
                  description: timestamp that error occur
                path:
                  type: string
                  description: path error
              description: default error model
          description: When resource not found.
      description: When cat not found
    GetByIdOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/CatEntity'
      description: cat get by id input
    GetByIdValidationError:
      type: object
      allOf:
        - type: object
          required:
            - error
          properties:
            error:
              type: object
              required:
                - code
                - traceid
                - context
                - message
                - timestamp
                - path
              properties:
                code:
                  type: number
                  enum:
                    - 400
                  description: status code
                traceid:
                  type: string
                  description: request traceid
                context:
                  type: string
                  description: class that error occur
                message:
                  type: array
                  items:
                    type: string
                    enum:
                      - 'id: Required'
                  description: error message
                timestamp:
                  type: string
                  description: timestamp that error occur
                path:
                  type: string
                  description: path error
              description: default error model
          description: When input is invalid.
      description: When input is invalid
    ListOutput:
      type: object
      allOf:
        - type: object
          required:
            - docs
            - page
            - limit
            - total
          properties:
            docs:
              type: array
              items:
                $ref: '#/components/schemas/CatEntity'
              description: documents
            page:
              type: integer
              format: int32
              description: current page
              default: 1
            limit:
              type: integer
              format: int32
              description: limit per page
              default: 10
            total:
              type: integer
              format: int64
              description: total items
              default: 1
            totalPages:
              type: integer
              format: int32
              description: total pages
              default: 1
          description: pagination default response
      description: cat list output
    ListQueryInput:
      type: object
      allOf:
        - $ref: '#/components/schemas/api.Utils.Model.ApiPaginationInput'
    UpdateCatNotFoundError:
      type: object
      allOf:
        - type: object
          required:
            - error
          properties:
            error:
              type: object
              required:
                - code
                - traceid
                - context
                - message
                - timestamp
                - path
              properties:
                code:
                  type: number
                  enum:
                    - 404
                  description: status code
                traceid:
                  type: string
                  description: request traceid
                context:
                  type: string
                  description: class that error occur
                message:
                  type: array
                  items:
                    type: string
                    enum:
                      - catNotFound
                  description: error message
                timestamp:
                  type: string
                  description: timestamp that error occur
                path:
                  type: string
                  description: path error
              description: default error model
          description: When resource not found.
      description: When cat not found
    UpdateInput:
      type: object
      allOf:
        - type: object
          required:
            - name
            - breed
            - age
          properties:
            name:
              type: string
            breed:
              type: string
            age:
              type: integer
              format: int16
          description: The template for picking properties.
      description: cat update input
    UpdateOutput:
      type: object
      allOf:
        - $ref: '#/components/schemas/CatEntity'
      description: cat update output
    UpdateValidationError:
      type: object
      allOf:
        - type: object
          required:
            - error
          properties:
            error:
              type: object
              required:
                - code
                - traceid
                - context
                - message
                - timestamp
                - path
              properties:
                code:
                  type: number
                  enum:
                    - 400
                  description: status code
                traceid:
                  type: string
                  description: request traceid
                context:
                  type: string
                  description: class that error occur
                message:
                  type: array
                  items:
                    type: string
                    enum:
                      - 'id: Required'
                  description: error message
                timestamp:
                  type: string
                  description: timestamp that error occur
                path:
                  type: string
                  description: path error
              description: default error model
          description: When input is invalid.
      description: When input is invalid
    api.Permission.ListQueryInput:
      type: object
      allOf:
        - $ref: '#/components/schemas/api.Utils.Model.ApiPaginationInput'
      description: permission list input
    api.Role.ListQueryInput:
      type: object
      allOf:
        - $ref: '#/components/schemas/api.Utils.Model.ApiPaginationInput'
      description: list query input
    api.User.ListQueryInput:
      type: object
      allOf:
        - $ref: '#/components/schemas/api.Utils.Model.ApiPaginationInput'
      description: user list query input
    api.Utils.Model.ApiPaginationInput:
      type: object
      required:
        - page
        - limit
      properties:
        page:
          type: integer
          format: int32
          description: pagination current page
          default: 1
        limit:
          type: integer
          format: int32
          description: pagination limit per page
          default: 10
        sort:
          type: string
          description: sort by property **property1:desc,property2:asc**
          default: createdAt:desc
        search:
          type: string
          description: search by property **property1:value1|value2**
    api.Utils.Versioning.ApiVersion:
      type: string
      enum:
        - v1
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
