openapi: 3.0.0
info:
  title: Reset password
  version: '1.0'
tags:
  - name: Reset password
paths:
  /api/{version}/reset-password/send-email:
    post:
      operationId: ResetPasswordController_sendEmail
      description: send email
      parameters:
        - $ref: '#/components/parameters/api.Utils.Versioning.VersionParams'
      responses:
        '200':
          description: email sended successfully
        '404':
          description: When user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailUserNotFoundError'
      tags:
        - Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailInput'
      security:
        - BearerAuth: []
  /api/{version}/reset-password/{token}:
    put:
      operationId: ResetPasswordController_confirmResetPassword
      description: reset password
      parameters:
        - $ref: '#/components/parameters/api.Utils.Versioning.VersionParams'
        - $ref: '#/components/parameters/ConfirmResetPasswordParamsInput'
      responses:
        '200':
          description: password changed successfully
        '400':
          description: When password are differents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmResetPasswordPasswordAreDifferentError'
        '401':
          description: When password are differents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmResetPasswordTokenWasExpiredError'
        '404':
          description: When user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmResetPasswordUserNotFoundError'
      tags:
        - Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmResetPasswordInput'
      security:
        - BearerAuth: []
components:
  parameters:
    ConfirmResetPasswordParamsInput:
      name: token
      in: path
      required: true
      description: user token
      schema:
        type: string
    api.Utils.Versioning.VersionParams:
      name: version
      in: path
      required: true
      description: route version
      schema:
        $ref: '#/components/schemas/api.Utils.Versioning.ApiVersion'
  schemas:
    ConfirmResetPasswordInput:
      type: object
      required:
        - password
        - token
        - confirmPassword
      properties:
        password:
          type: string
        token:
          type: string
        confirmPassword:
          type: string
      description: confirm reset password input
    ConfirmResetPasswordPasswordAreDifferentError:
      type: object
      allOf:
        - type: object
          required:
            - error
          properties:
            error:
              type: object
              required:
                - code
                - traceid
                - context
                - message
                - timestamp
                - path
              properties:
                code:
                  type: number
                  enum:
                    - 400
                  description: status code
                traceid:
                  type: string
                  description: request traceid
                context:
                  type: string
                  description: class that error occur
                message:
                  type: array
                  items:
                    type: string
                    enum:
                      - passwords are different
                  description: error message
                timestamp:
                  type: string
                  description: timestamp that error occur
                path:
                  type: string
                  description: path error
              description: default error model
          description: When input is invalid.
      description: When password are differents
    ConfirmResetPasswordTokenWasExpiredError:
      type: object
      allOf:
        - type: object
          required:
            - error
          properties:
            error:
              type: object
              required:
                - code
                - traceid
                - context
                - message
                - timestamp
                - path
              properties:
                code:
                  type: number
                  enum:
                    - 401
                  description: status code
                traceid:
                  type: string
                  description: request traceid
                context:
                  type: string
                  description: class that error occur
                message:
                  type: array
                  items:
                    type: string
                    enum:
                      - token was expired
                  description: error message
                timestamp:
                  type: string
                  description: timestamp that error occur
                path:
                  type: string
                  description: path error
              description: default error model
          description: When unauthorized occour.
      description: When password are differents
    ConfirmResetPasswordUserNotFoundError:
      type: object
      allOf:
        - type: object
          required:
            - error
          properties:
            error:
              type: object
              required:
                - code
                - traceid
                - context
                - message
                - timestamp
                - path
              properties:
                code:
                  type: number
                  enum:
                    - 404
                  description: status code
                traceid:
                  type: string
                  description: request traceid
                context:
                  type: string
                  description: class that error occur
                message:
                  type: array
                  items:
                    type: string
                    enum:
                      - user not found
                  description: error message
                timestamp:
                  type: string
                  description: timestamp that error occur
                path:
                  type: string
                  description: path error
              description: default error model
          description: When resource not found.
      description: When user not found
    ResetPasswordEntity:
      type: object
      required:
        - token
      properties:
        token:
          type: string
      description: reset password entity base
    SendEmailInput:
      type: object
      required:
        - email
      properties:
        email:
          type: string
      description: reset password send email input
    SendEmailUserNotFoundError:
      type: object
      allOf:
        - type: object
          required:
            - error
          properties:
            error:
              type: object
              required:
                - code
                - traceid
                - context
                - message
                - timestamp
                - path
              properties:
                code:
                  type: number
                  enum:
                    - 404
                  description: status code
                traceid:
                  type: string
                  description: request traceid
                context:
                  type: string
                  description: class that error occur
                message:
                  type: array
                  items:
                    type: string
                    enum:
                      - user not found
                  description: error message
                timestamp:
                  type: string
                  description: timestamp that error occur
                path:
                  type: string
                  description: path error
              description: default error model
          description: When resource not found.
      description: When user not found
    api.Utils.Versioning.ApiVersion:
      type: string
      enum:
        - v1
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
